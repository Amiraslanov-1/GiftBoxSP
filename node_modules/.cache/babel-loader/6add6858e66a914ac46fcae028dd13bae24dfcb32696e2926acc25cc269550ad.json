{"ast":null,"code":"const INITIAL_STATE = {\n  cart: [],\n  favorites: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        cart: [...state.cart, action.payload]\n      };\n    case \"ADD_TO_FAV\":\n      let producttofav = state.favorites.find(item => item.id == action.payload.id);\n      if (producttofav) {\n        let removeindexfav = state.favorites.indexOf(producttofav);\n        let newfav = state.favorites;\n        newfav.splice(removeindexfav, 1);\n        return {\n          ...state,\n          favorites: newfav\n        };\n      } else {\n        return {\n          ...state,\n          favorites: [...state.favorites, action.payload]\n        };\n      }\n    case \"PRODUCT_PLUS\":\n      let plusproduct = state.cart.find(item => item.id == action.payload);\n      let plusindex = state.cart.indexOf(plusproduct);\n      if (plusproduct) {\n        let newcart = state.cart;\n        newcart[plusindex].count++;\n        return {\n          ...state,\n          cart: newcart\n        };\n      }\n    case \"CLEAR_CART\":\n      let delcart = state.cart;\n      let dellenght = delcart.length;\n      delcart.splice(0, dellenght);\n      return {\n        ...state,\n        cart: delcart\n      };\n    case \"PRODUCT_MINUS\":\n      let minusproduct = state.cart.find(item => item.id == action.payload);\n      let minusindex = state.cart.indexOf(minusproduct);\n      if (minusproduct) {\n        let newcart = state.cart;\n        if (state.cart[minusindex].count == 1) {\n          newcart.splice(minusindex, 1);\n          return {\n            ...state,\n            cart: newcart\n          };\n        } else {\n          newcart[minusindex].count--;\n          return {\n            ...state,\n            cart: newcart\n          };\n        }\n      }\n    case \"PRODUCT_REMOVE_CART\":\n      let removeproduct = state.cart.find(item => item.id == action.payload);\n      let removeindex = state.cart.indexOf(removeproduct);\n      let newcart = state.cart;\n      newcart.splice(removeindex, 1);\n      return {\n        ...state,\n        cart: newcart\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["INITIAL_STATE","cart","favorites","state","action","type","payload","producttofav","find","item","id","removeindexfav","indexOf","newfav","splice","plusproduct","plusindex","newcart","count","delcart","dellenght","length","minusproduct","minusindex","removeproduct","removeindex"],"sources":["C:/Users/xmira/OneDrive/Рабочий стол/e-commerce-react-app-main/src/redux/reducer.js"],"sourcesContent":["const INITIAL_STATE = {\n    cart: [],\n    favorites: [],\n}\nexport default (state = INITIAL_STATE, action)=>{\n    switch (action.type){\n        case \"ADD_TO_CART\":\n            return { ...state, cart: [...state.cart, action.payload] }\n        case \"ADD_TO_FAV\":\n            let producttofav = state.favorites.find(item=>item.id == action.payload.id)\n            if(producttofav){\n                let removeindexfav = state.favorites.indexOf(producttofav)\n                let newfav = state.favorites\n                newfav.splice(removeindexfav, 1)\n                return { ...state, favorites: newfav }            \n            }else{\n             return { ...state, favorites: [...state.favorites, action.payload] }\n            }\n        case \"PRODUCT_PLUS\":\n            let plusproduct = state.cart.find(item=>item.id == action.payload)\n            let plusindex = state.cart.indexOf(plusproduct)\n            if(plusproduct){\n                let newcart = state.cart\n                newcart[plusindex].count ++\n                return { ...state, cart: newcart }\n            }\n        case \"CLEAR_CART\":\n            let delcart = state.cart\n            let dellenght = delcart.length\n            delcart.splice(0,dellenght)\n            return{...state, cart: delcart}\n        case \"PRODUCT_MINUS\":\n            let minusproduct = state.cart.find(item=>item.id == action.payload)\n            let minusindex = state.cart.indexOf(minusproduct)\n            if(minusproduct){\n                let newcart = state.cart\n                if(state.cart[minusindex].count==1){\n                    newcart.splice(minusindex, 1)\n                    return { ...state, cart: newcart }\n                }else{\n                    newcart[minusindex].count --\n                    return { ...state, cart: newcart }\n                }\n                \n            }\n        case \"PRODUCT_REMOVE_CART\":\n            let removeproduct = state.cart.find(item=>item.id == action.payload)\n            let removeindex = state.cart.indexOf(removeproduct)\n            let newcart = state.cart\n            newcart.splice(removeindex, 1)\n            return { ...state, cart: newcart }            \n        default:\n            return state;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}